name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Scripts
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Test Bash Script Syntax
      run: |
        echo "üîç Testing Bash script syntax..."
        bash -n setup_qradar_logging.sh
        echo "‚úÖ Bash script syntax check passed"
    
    - name: Test Python Script Syntax
      run: |
        echo "üîç Testing Python script syntax..."
        python3 -m py_compile concat_execve.py
        echo "‚úÖ Python script syntax check passed"
    
    - name: Run Python Script Tests
      run: |
        echo "üß™ Running Python script functionality tests..."
        python3 concat_execve.py --test
        echo "‚úÖ Python script functionality tests passed"
    
    - name: Validate File Structure
      run: |
        echo "üìÅ Validating file structure..."
        
        # Check required files exist
        files=(
          "setup_qradar_logging.sh"
          "concat_execve.py"
          "README.md"
          "CHANGELOG.md"
          "LICENSE"
          ".gitignore"
        )
        
        for file in "${files[@]}"; do
          if [[ -f "$file" ]]; then
            echo "‚úÖ $file exists"
          else
            echo "‚ùå $file is missing"
            exit 1
          fi
        done
        
        # Check script permissions
        if [[ -x "setup_qradar_logging.sh" ]]; then
          echo "‚úÖ setup_qradar_logging.sh is executable"
        else
          echo "‚ùå setup_qradar_logging.sh is not executable"
          exit 1
        fi
        
        if [[ -x "concat_execve.py" ]]; then
          echo "‚úÖ concat_execve.py is executable"
        else
          echo "‚ùå concat_execve.py is not executable"
          exit 1
        fi
    
    - name: Validate Documentation
      run: |
        echo "üìñ Validating documentation..."
        
        # Check if README contains required sections
        required_sections=(
          "Features"
          "Prerequisites"
          "Installation"
          "Usage"
          "Testing"
          "Troubleshooting"
        )
        
        for section in "${required_sections[@]}"; do
          if grep -q "$section" README.md; then
            echo "‚úÖ README contains $section section"
          else
            echo "‚ö†Ô∏è README missing $section section"
          fi
        done
        
        # Check CHANGELOG format
        if grep -q "## \[.*\] - [0-9]" CHANGELOG.md; then
          echo "‚úÖ CHANGELOG follows proper format"
        else
          echo "‚ö†Ô∏è CHANGELOG format may need improvement"
        fi
    
    - name: Security Check
      run: |
        echo "üîí Running basic security checks..."
        
        # Check for hardcoded credentials (basic patterns)
        if grep -r -i "password\|secret\|token\|key" --include="*.sh" --include="*.py" . | grep -v "README\|CHANGELOG\|LICENSE\|test\|example"; then
          echo "‚ö†Ô∏è Potential hardcoded credentials found (manual review needed)"
        else
          echo "‚úÖ No obvious hardcoded credentials detected"
        fi
        
        # Check file permissions in git (stored permissions)
        echo "üìã File permissions check:"
        ls -la setup_qradar_logging.sh concat_execve.py
    
    - name: Code Quality
      run: |
        echo "üìä Basic code quality checks..."
        
        # Check for TODO/FIXME comments
        todo_count=$(grep -r -i "todo\|fixme" --include="*.sh" --include="*.py" . | wc -l)
        if [[ $todo_count -gt 0 ]]; then
          echo "üìù Found $todo_count TODO/FIXME comments:"
          grep -r -i "todo\|fixme" --include="*.sh" --include="*.py" . || true
        else
          echo "‚úÖ No TODO/FIXME comments found"
        fi
        
        # Basic shell script analysis
        echo "üêö Shell script analysis:"
        shellcheck setup_qradar_logging.sh || echo "‚ö†Ô∏è ShellCheck not available or found issues"
    
    - name: Test Summary
      if: always()
      run: |
        echo "üìã Test Summary:"
        echo "‚úÖ Bash syntax validation"
        echo "‚úÖ Python syntax validation"  
        echo "‚úÖ Python functionality tests"
        echo "‚úÖ File structure validation"
        echo "‚úÖ Documentation validation"
        echo "‚úÖ Security checks"
        echo "‚úÖ Code quality analysis"
        echo ""
        echo "üéâ All tests completed!"